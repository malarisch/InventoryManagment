-- Enable admin operations for service_role on auth.users
grant insert, update, delete, select on table auth.users to service_role;

create policy "Service role can manage users" on auth.users as permissive for all to service_role using (true);



create table "public"."asset_tag_templates" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "created_by" uuid default auth.uid(),
    "template" jsonb,
    "company_id" bigint
);


alter table "public"."asset_tag_templates" enable row level security;

create table "public"."asset_tags" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "created_by" uuid default auth.uid(),
    "printed_code" character varying,
    "printed_template" bigint,
    "printed_applied" boolean not null default false,
    "company_id" bigint
);


alter table "public"."asset_tags" enable row level security;

create table "public"."cases" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "case_equipment" bigint,
    "equipments" bigint[],
    "company_id" bigint,
    "created_by" uuid default auth.uid()
);


alter table "public"."cases" enable row level security;

create table "public"."customers" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "company_id" bigint not null,
    "created_by" uuid default auth.uid(),
    "type" text,
    "forename" text,
    "surname" text,
    "company_name" text,
    "address" text,
    "postal_code" text,
    "country" text,
    "email" text,
    "metadata" jsonb
);


alter table "public"."customers" enable row level security;

create table "public"."history" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "company_id" bigint,
    "table_name" text not null,
    "data_id" bigint not null,
    "old_data" jsonb not null,
    "change_made_by" uuid
);


alter table "public"."history" enable row level security;

create table "public"."job_assets_on_job" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "created_by" uuid default auth.uid(),
    "company_id" bigint not null,
    "job_id" bigint not null,
    "equipment_id" bigint,
    "case_id" bigint
);


alter table "public"."job_assets_on_job" enable row level security;

create table "public"."job_booked_assets" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "created_by" uuid default auth.uid(),
    "company_id" bigint not null,
    "job_id" bigint not null,
    "equipment_id" bigint,
    "case_id" bigint
);


alter table "public"."job_booked_assets" enable row level security;

create table "public"."jobs" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "customer_id" bigint,
    "created_by" uuid,
    "startdate" timestamp without time zone,
    "enddate" timestamp without time zone,
    "name" text,
    "type" text,
    "job_location" text,
    "meta" jsonb,
    "company_id" bigint not null
);


alter table "public"."jobs" enable row level security;

create table "public"."users_companies" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "user_id" uuid not null,
    "company_id" bigint not null
);


alter table "public"."users_companies" enable row level security;

alter table "public"."articles" add column "asset_tag" bigint;

alter table "public"."equipments" add column "current_location" bigint;

alter table "public"."equipments" alter column "asset_tag" set data type bigint using "asset_tag"::bigint;

alter table "public"."locations" add column "asset_tag" bigint;


CREATE UNIQUE INDEX asset_tag_templates_pkey ON public.asset_tag_templates USING btree (id);

CREATE UNIQUE INDEX asset_tags_pkey ON public.asset_tags USING btree (id);

CREATE UNIQUE INDEX cases_pkey ON public.cases USING btree (id);

CREATE UNIQUE INDEX customers_pkey ON public.customers USING btree (id);

CREATE UNIQUE INDEX history_pkey ON public.history USING btree (id);

CREATE UNIQUE INDEX job_assets_on_job_pkey ON public.job_assets_on_job USING btree (id);

CREATE UNIQUE INDEX job_booked_assets_pkey ON public.job_booked_assets USING btree (id);

CREATE UNIQUE INDEX jobs_pkey ON public.jobs USING btree (id);

CREATE UNIQUE INDEX users_companies_pkey ON public.users_companies USING btree (id);

alter table "public"."asset_tag_templates" add constraint "asset_tag_templates_pkey" PRIMARY KEY using index "asset_tag_templates_pkey";

alter table "public"."asset_tags" add constraint "asset_tags_pkey" PRIMARY KEY using index "asset_tags_pkey";

alter table "public"."cases" add constraint "cases_pkey" PRIMARY KEY using index "cases_pkey";

alter table "public"."customers" add constraint "customers_pkey" PRIMARY KEY using index "customers_pkey";

alter table "public"."history" add constraint "history_pkey" PRIMARY KEY using index "history_pkey";

alter table "public"."job_assets_on_job" add constraint "job_assets_on_job_pkey" PRIMARY KEY using index "job_assets_on_job_pkey";

alter table "public"."job_booked_assets" add constraint "job_booked_assets_pkey" PRIMARY KEY using index "job_booked_assets_pkey";

alter table "public"."jobs" add constraint "jobs_pkey" PRIMARY KEY using index "jobs_pkey";

alter table "public"."users_companies" add constraint "users_companies_pkey" PRIMARY KEY using index "users_companies_pkey";

alter table "public"."articles" add constraint "articles_asset_tag_fkey" FOREIGN KEY (asset_tag) REFERENCES asset_tags(id) not valid;

alter table "public"."articles" validate constraint "articles_asset_tag_fkey";

alter table "public"."asset_tag_templates" add constraint "asset_tag_templates_company_id_fkey" FOREIGN KEY (company_id) REFERENCES companies(id) not valid;

alter table "public"."asset_tag_templates" validate constraint "asset_tag_templates_company_id_fkey";

alter table "public"."asset_tag_templates" add constraint "asset_tag_templates_created_by_fkey" FOREIGN KEY (created_by) REFERENCES profiles(id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."asset_tag_templates" validate constraint "asset_tag_templates_created_by_fkey";

alter table "public"."asset_tags" add constraint "asset_tags_company_id_fkey" FOREIGN KEY (company_id) REFERENCES companies(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."asset_tags" validate constraint "asset_tags_company_id_fkey";

alter table "public"."asset_tags" add constraint "asset_tags_created_by_fkey" FOREIGN KEY (created_by) REFERENCES profiles(id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."asset_tags" validate constraint "asset_tags_created_by_fkey";

alter table "public"."cases" add constraint "cases_case_equipment_fkey" FOREIGN KEY (case_equipment) REFERENCES equipments(id) not valid;

alter table "public"."cases" validate constraint "cases_case_equipment_fkey";

alter table "public"."cases" add constraint "cases_company_id_fkey" FOREIGN KEY (company_id) REFERENCES companies(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."cases" validate constraint "cases_company_id_fkey";

alter table "public"."cases" add constraint "cases_created_by_fkey" FOREIGN KEY (created_by) REFERENCES profiles(id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."cases" validate constraint "cases_created_by_fkey";

alter table "public"."customers" add constraint "customers_company_id_fkey" FOREIGN KEY (company_id) REFERENCES companies(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."customers" validate constraint "customers_company_id_fkey";

alter table "public"."customers" add constraint "customers_created_by_fkey" FOREIGN KEY (created_by) REFERENCES profiles(id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."customers" validate constraint "customers_created_by_fkey";

alter table "public"."equipments" add constraint "equipments_asset_tag_fkey" FOREIGN KEY (asset_tag) REFERENCES asset_tags(id) not valid;

alter table "public"."equipments" validate constraint "equipments_asset_tag_fkey";

alter table "public"."equipments" add constraint "equipments_current_location_fkey" FOREIGN KEY (current_location) REFERENCES locations(id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."equipments" validate constraint "equipments_current_location_fkey";

alter table "public"."history" add constraint "history_change_made_by_fkey" FOREIGN KEY (change_made_by) REFERENCES profiles(id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."history" validate constraint "history_change_made_by_fkey";

alter table "public"."history" add constraint "history_company_id_fkey" FOREIGN KEY (company_id) REFERENCES companies(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."history" validate constraint "history_company_id_fkey";

alter table "public"."job_assets_on_job" add constraint "job_assets_on_job_case_id_fkey" FOREIGN KEY (case_id) REFERENCES cases(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."job_assets_on_job" validate constraint "job_assets_on_job_case_id_fkey";

alter table "public"."job_assets_on_job" add constraint "job_assets_on_job_company_id_fkey" FOREIGN KEY (company_id) REFERENCES companies(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."job_assets_on_job" validate constraint "job_assets_on_job_company_id_fkey";

alter table "public"."job_assets_on_job" add constraint "job_assets_on_job_created_by_fkey" FOREIGN KEY (created_by) REFERENCES profiles(id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."job_assets_on_job" validate constraint "job_assets_on_job_created_by_fkey";

alter table "public"."job_assets_on_job" add constraint "job_assets_on_job_equipment_id_fkey" FOREIGN KEY (equipment_id) REFERENCES equipments(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."job_assets_on_job" validate constraint "job_assets_on_job_equipment_id_fkey";

alter table "public"."job_assets_on_job" add constraint "job_assets_on_job_job_id_fkey" FOREIGN KEY (job_id) REFERENCES jobs(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."job_assets_on_job" validate constraint "job_assets_on_job_job_id_fkey";

alter table "public"."job_booked_assets" add constraint "job_booked_assets_case_id_fkey" FOREIGN KEY (case_id) REFERENCES cases(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."job_booked_assets" validate constraint "job_booked_assets_case_id_fkey";

alter table "public"."job_booked_assets" add constraint "job_booked_assets_company_id_fkey" FOREIGN KEY (company_id) REFERENCES companies(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."job_booked_assets" validate constraint "job_booked_assets_company_id_fkey";

alter table "public"."job_booked_assets" add constraint "job_booked_assets_created_by_fkey" FOREIGN KEY (created_by) REFERENCES profiles(id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."job_booked_assets" validate constraint "job_booked_assets_created_by_fkey";

alter table "public"."job_booked_assets" add constraint "job_booked_assets_equipment_id_fkey" FOREIGN KEY (equipment_id) REFERENCES equipments(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."job_booked_assets" validate constraint "job_booked_assets_equipment_id_fkey";

alter table "public"."job_booked_assets" add constraint "job_booked_assets_job_id_fkey" FOREIGN KEY (job_id) REFERENCES jobs(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."job_booked_assets" validate constraint "job_booked_assets_job_id_fkey";

alter table "public"."jobs" add constraint "jobs_company_id_fkey" FOREIGN KEY (company_id) REFERENCES companies(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."jobs" validate constraint "jobs_company_id_fkey";

alter table "public"."jobs" add constraint "jobs_created_by_fkey" FOREIGN KEY (created_by) REFERENCES profiles(id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."jobs" validate constraint "jobs_created_by_fkey";

alter table "public"."jobs" add constraint "jobs_customer_id_fkey" FOREIGN KEY (customer_id) REFERENCES customers(id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."jobs" validate constraint "jobs_customer_id_fkey";

alter table "public"."locations" add constraint "locations_asset_tag_fkey" FOREIGN KEY (asset_tag) REFERENCES asset_tags(id) not valid;

alter table "public"."locations" validate constraint "locations_asset_tag_fkey";


alter table "public"."users_companies" add constraint "users_companies_company_id_fkey" FOREIGN KEY (company_id) REFERENCES companies(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."users_companies" validate constraint "users_companies_company_id_fkey";

alter table "public"."users_companies" add constraint "users_companies_user_id_fkey" FOREIGN KEY (user_id) REFERENCES profiles(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."users_companies" validate constraint "users_companies_user_id_fkey";

grant delete on table "public"."asset_tag_templates" to "anon";

grant insert on table "public"."asset_tag_templates" to "anon";

grant references on table "public"."asset_tag_templates" to "anon";

grant select on table "public"."asset_tag_templates" to "anon";

grant trigger on table "public"."asset_tag_templates" to "anon";

grant truncate on table "public"."asset_tag_templates" to "anon";

grant update on table "public"."asset_tag_templates" to "anon";

grant delete on table "public"."asset_tag_templates" to "authenticated";

grant insert on table "public"."asset_tag_templates" to "authenticated";

grant references on table "public"."asset_tag_templates" to "authenticated";

grant select on table "public"."asset_tag_templates" to "authenticated";

grant trigger on table "public"."asset_tag_templates" to "authenticated";

grant truncate on table "public"."asset_tag_templates" to "authenticated";

grant update on table "public"."asset_tag_templates" to "authenticated";

grant delete on table "public"."asset_tag_templates" to "service_role";

grant insert on table "public"."asset_tag_templates" to "service_role";

grant references on table "public"."asset_tag_templates" to "service_role";

grant select on table "public"."asset_tag_templates" to "service_role";

grant trigger on table "public"."asset_tag_templates" to "service_role";

grant truncate on table "public"."asset_tag_templates" to "service_role";

grant update on table "public"."asset_tag_templates" to "service_role";

grant delete on table "public"."asset_tags" to "anon";

grant insert on table "public"."asset_tags" to "anon";

grant references on table "public"."asset_tags" to "anon";

grant select on table "public"."asset_tags" to "anon";

grant trigger on table "public"."asset_tags" to "anon";

grant truncate on table "public"."asset_tags" to "anon";

grant update on table "public"."asset_tags" to "anon";

grant delete on table "public"."asset_tags" to "authenticated";

grant insert on table "public"."asset_tags" to "authenticated";

grant references on table "public"."asset_tags" to "authenticated";

grant select on table "public"."asset_tags" to "authenticated";

grant trigger on table "public"."asset_tags" to "authenticated";

grant truncate on table "public"."asset_tags" to "authenticated";

grant update on table "public"."asset_tags" to "authenticated";

grant delete on table "public"."asset_tags" to "service_role";

grant insert on table "public"."asset_tags" to "service_role";

grant references on table "public"."asset_tags" to "service_role";

grant select on table "public"."asset_tags" to "service_role";

grant trigger on table "public"."asset_tags" to "service_role";

grant truncate on table "public"."asset_tags" to "service_role";

grant update on table "public"."asset_tags" to "service_role";

grant delete on table "public"."cases" to "anon";

grant insert on table "public"."cases" to "anon";

grant references on table "public"."cases" to "anon";

grant select on table "public"."cases" to "anon";

grant trigger on table "public"."cases" to "anon";

grant truncate on table "public"."cases" to "anon";

grant update on table "public"."cases" to "anon";

grant delete on table "public"."cases" to "authenticated";

grant insert on table "public"."cases" to "authenticated";

grant references on table "public"."cases" to "authenticated";

grant select on table "public"."cases" to "authenticated";

grant trigger on table "public"."cases" to "authenticated";

grant truncate on table "public"."cases" to "authenticated";

grant update on table "public"."cases" to "authenticated";

grant delete on table "public"."cases" to "service_role";

grant insert on table "public"."cases" to "service_role";

grant references on table "public"."cases" to "service_role";

grant select on table "public"."cases" to "service_role";

grant trigger on table "public"."cases" to "service_role";

grant truncate on table "public"."cases" to "service_role";

grant update on table "public"."cases" to "service_role";

grant delete on table "public"."customers" to "anon";

grant insert on table "public"."customers" to "anon";

grant references on table "public"."customers" to "anon";

grant select on table "public"."customers" to "anon";

grant trigger on table "public"."customers" to "anon";

grant truncate on table "public"."customers" to "anon";

grant update on table "public"."customers" to "anon";

grant delete on table "public"."customers" to "authenticated";

grant insert on table "public"."customers" to "authenticated";

grant references on table "public"."customers" to "authenticated";

grant select on table "public"."customers" to "authenticated";

grant trigger on table "public"."customers" to "authenticated";

grant truncate on table "public"."customers" to "authenticated";

grant update on table "public"."customers" to "authenticated";

grant delete on table "public"."customers" to "service_role";

grant insert on table "public"."customers" to "service_role";

grant references on table "public"."customers" to "service_role";

grant select on table "public"."customers" to "service_role";

grant trigger on table "public"."customers" to "service_role";

grant truncate on table "public"."customers" to "service_role";

grant update on table "public"."customers" to "service_role";

grant delete on table "public"."history" to "anon";

grant insert on table "public"."history" to "anon";

grant references on table "public"."history" to "anon";

grant select on table "public"."history" to "anon";

grant trigger on table "public"."history" to "anon";

grant truncate on table "public"."history" to "anon";

grant update on table "public"."history" to "anon";

grant delete on table "public"."history" to "authenticated";

grant insert on table "public"."history" to "authenticated";

grant references on table "public"."history" to "authenticated";

grant select on table "public"."history" to "authenticated";

grant trigger on table "public"."history" to "authenticated";

grant truncate on table "public"."history" to "authenticated";

grant update on table "public"."history" to "authenticated";

grant delete on table "public"."history" to "service_role";

grant insert on table "public"."history" to "service_role";

grant references on table "public"."history" to "service_role";

grant select on table "public"."history" to "service_role";

grant trigger on table "public"."history" to "service_role";

grant truncate on table "public"."history" to "service_role";

grant update on table "public"."history" to "service_role";

grant delete on table "public"."job_assets_on_job" to "anon";

grant insert on table "public"."job_assets_on_job" to "anon";

grant references on table "public"."job_assets_on_job" to "anon";

grant select on table "public"."job_assets_on_job" to "anon";

grant trigger on table "public"."job_assets_on_job" to "anon";

grant truncate on table "public"."job_assets_on_job" to "anon";

grant update on table "public"."job_assets_on_job" to "anon";

grant delete on table "public"."job_assets_on_job" to "authenticated";

grant insert on table "public"."job_assets_on_job" to "authenticated";

grant references on table "public"."job_assets_on_job" to "authenticated";

grant select on table "public"."job_assets_on_job" to "authenticated";

grant trigger on table "public"."job_assets_on_job" to "authenticated";

grant truncate on table "public"."job_assets_on_job" to "authenticated";

grant update on table "public"."job_assets_on_job" to "authenticated";

grant delete on table "public"."job_assets_on_job" to "service_role";

grant insert on table "public"."job_assets_on_job" to "service_role";

grant references on table "public"."job_assets_on_job" to "service_role";

grant select on table "public"."job_assets_on_job" to "service_role";

grant trigger on table "public"."job_assets_on_job" to "service_role";

grant truncate on table "public"."job_assets_on_job" to "service_role";

grant update on table "public"."job_assets_on_job" to "service_role";

grant delete on table "public"."job_booked_assets" to "anon";

grant insert on table "public"."job_booked_assets" to "anon";

grant references on table "public"."job_booked_assets" to "anon";

grant select on table "public"."job_booked_assets" to "anon";

grant trigger on table "public"."job_booked_assets" to "anon";

grant truncate on table "public"."job_booked_assets" to "anon";

grant update on table "public"."job_booked_assets" to "anon";

grant delete on table "public"."job_booked_assets" to "authenticated";

grant insert on table "public"."job_booked_assets" to "authenticated";

grant references on table "public"."job_booked_assets" to "authenticated";

grant select on table "public"."job_booked_assets" to "authenticated";

grant trigger on table "public"."job_booked_assets" to "authenticated";

grant truncate on table "public"."job_booked_assets" to "authenticated";

grant update on table "public"."job_booked_assets" to "authenticated";

grant delete on table "public"."job_booked_assets" to "service_role";

grant insert on table "public"."job_booked_assets" to "service_role";

grant references on table "public"."job_booked_assets" to "service_role";

grant select on table "public"."job_booked_assets" to "service_role";

grant trigger on table "public"."job_booked_assets" to "service_role";

grant truncate on table "public"."job_booked_assets" to "service_role";

grant update on table "public"."job_booked_assets" to "service_role";

grant delete on table "public"."jobs" to "anon";

grant insert on table "public"."jobs" to "anon";

grant references on table "public"."jobs" to "anon";

grant select on table "public"."jobs" to "anon";

grant trigger on table "public"."jobs" to "anon";

grant truncate on table "public"."jobs" to "anon";

grant update on table "public"."jobs" to "anon";

grant delete on table "public"."jobs" to "authenticated";

grant insert on table "public"."jobs" to "authenticated";

grant references on table "public"."jobs" to "authenticated";

grant select on table "public"."jobs" to "authenticated";

grant trigger on table "public"."jobs" to "authenticated";

grant truncate on table "public"."jobs" to "authenticated";

grant update on table "public"."jobs" to "authenticated";

grant delete on table "public"."jobs" to "service_role";

grant insert on table "public"."jobs" to "service_role";

grant references on table "public"."jobs" to "service_role";

grant select on table "public"."jobs" to "service_role";

grant trigger on table "public"."jobs" to "service_role";

grant truncate on table "public"."jobs" to "service_role";

grant update on table "public"."jobs" to "service_role";

grant delete on table "public"."users_companies" to "anon";

grant insert on table "public"."users_companies" to "anon";

grant references on table "public"."users_companies" to "anon";

grant select on table "public"."users_companies" to "anon";

grant trigger on table "public"."users_companies" to "anon";

grant truncate on table "public"."users_companies" to "anon";

grant update on table "public"."users_companies" to "anon";

grant delete on table "public"."users_companies" to "authenticated";

grant insert on table "public"."users_companies" to "authenticated";

grant references on table "public"."users_companies" to "authenticated";

grant select on table "public"."users_companies" to "authenticated";

grant trigger on table "public"."users_companies" to "authenticated";

grant truncate on table "public"."users_companies" to "authenticated";

grant update on table "public"."users_companies" to "authenticated";

grant delete on table "public"."users_companies" to "service_role";

grant insert on table "public"."users_companies" to "service_role";

grant references on table "public"."users_companies" to "service_role";

grant select on table "public"."users_companies" to "service_role";

grant trigger on table "public"."users_companies" to "service_role";

grant truncate on table "public"."users_companies" to "service_role";

grant update on table "public"."users_companies" to "service_role";

-- Helper functions to avoid policy recursion
create or replace function public.owned_company_ids_current_user()
returns setof bigint
language sql
stable
security definer
set search_path = public
as $$
  select c.id
  from public.companies c
  where c.owner_user_id = auth.uid();
$$;

create or replace function public.company_ids_current_user()
returns setof bigint
language sql
stable
security definer
set search_path = public
as $$
  select uc.company_id
  from public.users_companies uc
  where uc.user_id = auth.uid()
  union
  select c.id
  from public.companies c
  where c.owner_user_id = auth.uid();
$$;

grant execute on function public.owned_company_ids_current_user() to authenticated;
grant execute on function public.company_ids_current_user() to authenticated;

create policy "Allow All for Company Users"
on "public"."articles"
as permissive
for all
to authenticated
using ((company_id IN (select public.company_ids_current_user())));


create policy "Allow All for Company Users"
on "public"."asset_tag_templates"
as permissive
for all
to authenticated
using ((company_id IN (select public.company_ids_current_user())));


create policy "Disallow delete for enrolled templates"
on "public"."asset_tag_templates"
as permissive
for delete
to authenticated
using ((NOT (EXISTS ( SELECT 1
   FROM asset_tags
  WHERE ((asset_tags.printed_template = asset_tag_templates.id) AND (asset_tags.printed_applied = true))))));


create policy "Disallow update for enrolled templates"
on "public"."asset_tag_templates"
as permissive
for update
to authenticated
using ((NOT (EXISTS ( SELECT 1
   FROM asset_tags
  WHERE ((asset_tags.printed_template = asset_tag_templates.id) AND (asset_tags.printed_applied = true))))))
with check ((NOT (EXISTS ( SELECT 1
   FROM asset_tags
  WHERE ((asset_tags.printed_template = asset_tag_templates.id) AND (asset_tags.printed_applied = true))))));


create policy "Allow All for Company Users"
on "public"."asset_tags"
as permissive
for all
to authenticated
using ((company_id IN (select public.company_ids_current_user())));


create policy "Allow All for Company Users"
on "public"."cases"
as permissive
for all
to authenticated
using ((company_id IN (select public.company_ids_current_user())));


create policy "Allow company members select"
on "public"."companies"
as permissive
for select
to authenticated
using ((id IN (select public.company_ids_current_user())));


create policy "allow owner full access"
on "public"."companies"
as permissive
for all
to authenticated
using ((owner_user_id = (select auth.uid())));


create policy "Allow All for Company Users"
on "public"."customers"
as permissive
for all
to authenticated
using ((company_id IN (select public.company_ids_current_user())));


create policy "Allow All for Company Users"
on "public"."equipments"
as permissive
for all
to authenticated
using ((company_id IN (select public.company_ids_current_user())));


create policy "Allow select for company users"
on "public"."history"
as permissive
for select
to authenticated
using ((company_id IN (select public.company_ids_current_user())));


create policy "Allow All for Company Users"
on "public"."job_assets_on_job"
as permissive
for all
to authenticated
using ((company_id IN (select public.company_ids_current_user())));


create policy "Allow All for Company Users"
on "public"."job_booked_assets"
as permissive
for all
to authenticated
using ((company_id IN (select public.company_ids_current_user())));


create policy "Allow All for Company Users"
on "public"."jobs"
as permissive
for all
to authenticated
using ((company_id IN (select public.company_ids_current_user())));


create policy "Allow All for Company Users"
on "public"."locations"
as permissive
for all
to authenticated
using ((company_id IN (select public.company_ids_current_user())));


create policy "Company Members can view their co-workers"
on "public"."users_companies"
as permissive
for select
to authenticated
using ((company_id IN (select public.company_ids_current_user())));


create policy "Owners can add their company users"
on "public"."users_companies"
as permissive
for insert
to authenticated
with check ((company_id IN (select public.owned_company_ids_current_user())));


create policy "Owners can remove their company users"
on "public"."users_companies"
as permissive
for delete
to authenticated
using ((company_id IN (select public.owned_company_ids_current_user())));


create policy "Owners cannot remove self from their company"
on "public"."users_companies"
as permissive
for delete
to authenticated
using ((company_id IN (select public.owned_company_ids_current_user()) AND user_id <> auth.uid()));
