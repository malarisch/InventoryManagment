
create table "public"."nfc_tags" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "created_by" uuid default auth.uid(),
    "tag_id" character varying not null,
    "company_id" bigint not null
);

alter table "public"."nfc_tags" enable row level security;

CREATE UNIQUE INDEX nfc_tags_pkey ON public.nfc_tags USING btree (id);

alter table "public"."nfc_tags" add constraint "nfc_tags_pkey" PRIMARY KEY using index "nfc_tags_pkey";

alter table "public"."nfc_tags" add constraint "nfc_tags_company_id_fkey" FOREIGN KEY (company_id) REFERENCES companies(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."nfc_tags" validate constraint "nfc_tags_company_id_fkey";

alter table "public"."nfc_tags" add constraint "nfc_tags_created_by_fkey" FOREIGN KEY (created_by) REFERENCES profiles(id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."nfc_tags" validate constraint "nfc_tags_created_by_fkey";

create policy "Allow all for company members" on public.nfc_tags for all
  using (public.is_company_member(company_id));

alter table "public"."asset_tags" add column "nfc_tag_id" bigint;

alter table "public"."asset_tags" add constraint "asset_tags_nfc_tag_id_fkey" FOREIGN KEY (nfc_tag_id) REFERENCES nfc_tags(id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."asset_tags" validate constraint "asset_tags_nfc_tag_id_fkey";
