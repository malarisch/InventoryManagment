create table "public"."articles" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "name" character varying not null default ''::character varying,
    "metadata" jsonb,
    "created_by" uuid default auth.uid(),
    "default_location" bigint
);


alter table "public"."articles" enable row level security;

create table "public"."equipments" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "asset_tag" character varying,
    "has_asset_sticker" boolean default false,
    "added_to_inventory_at" timestamp without time zone,
    "metadata" jsonb,
    "article_id" bigint,
    "created_by" uuid not null default auth.uid()
);


alter table "public"."equipments" enable row level security;

create table "public"."locations" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "created_by" uuid not null default auth.uid(),
    "name" character varying not null,
    "description" text
);


alter table "public"."locations" enable row level security;

CREATE UNIQUE INDEX articles_pkey ON public.articles USING btree (id);

CREATE UNIQUE INDEX equipments_pkey ON public.equipments USING btree (id);

CREATE UNIQUE INDEX locations_pkey ON public.locations USING btree (id);

alter table "public"."articles" add constraint "articles_pkey" PRIMARY KEY using index "articles_pkey";

alter table "public"."equipments" add constraint "equipments_pkey" PRIMARY KEY using index "equipments_pkey";

alter table "public"."locations" add constraint "locations_pkey" PRIMARY KEY using index "locations_pkey";

alter table "public"."articles" add constraint "articles_created_by_fkey" FOREIGN KEY (created_by) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."articles" validate constraint "articles_created_by_fkey";

alter table "public"."articles" add constraint "articles_default_location_fkey" FOREIGN KEY (default_location) REFERENCES locations(id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."articles" validate constraint "articles_default_location_fkey";

alter table "public"."equipments" add constraint "equipments_article_id_fkey" FOREIGN KEY (article_id) REFERENCES articles(id) not valid;

alter table "public"."equipments" validate constraint "equipments_article_id_fkey";

alter table "public"."equipments" add constraint "equipments_created_by_fkey" FOREIGN KEY (created_by) REFERENCES auth.users(id) not valid;

alter table "public"."equipments" validate constraint "equipments_created_by_fkey";

alter table "public"."locations" add constraint "locations_created_by_fkey" FOREIGN KEY (created_by) REFERENCES auth.users(id) ON DELETE SET NULL not valid;

alter table "public"."locations" validate constraint "locations_created_by_fkey";

grant delete on table "public"."articles" to "anon";

grant insert on table "public"."articles" to "anon";

grant references on table "public"."articles" to "anon";

grant select on table "public"."articles" to "anon";

grant trigger on table "public"."articles" to "anon";

grant truncate on table "public"."articles" to "anon";

grant update on table "public"."articles" to "anon";

grant delete on table "public"."articles" to "authenticated";

grant insert on table "public"."articles" to "authenticated";

grant references on table "public"."articles" to "authenticated";

grant select on table "public"."articles" to "authenticated";

grant trigger on table "public"."articles" to "authenticated";

grant truncate on table "public"."articles" to "authenticated";

grant update on table "public"."articles" to "authenticated";

grant delete on table "public"."articles" to "service_role";

grant insert on table "public"."articles" to "service_role";

grant references on table "public"."articles" to "service_role";

grant select on table "public"."articles" to "service_role";

grant trigger on table "public"."articles" to "service_role";

grant truncate on table "public"."articles" to "service_role";

grant update on table "public"."articles" to "service_role";

grant delete on table "public"."equipments" to "anon";

grant insert on table "public"."equipments" to "anon";

grant references on table "public"."equipments" to "anon";

grant select on table "public"."equipments" to "anon";

grant trigger on table "public"."equipments" to "anon";

grant truncate on table "public"."equipments" to "anon";

grant update on table "public"."equipments" to "anon";

grant delete on table "public"."equipments" to "authenticated";

grant insert on table "public"."equipments" to "authenticated";

grant references on table "public"."equipments" to "authenticated";

grant select on table "public"."equipments" to "authenticated";

grant trigger on table "public"."equipments" to "authenticated";

grant truncate on table "public"."equipments" to "authenticated";

grant update on table "public"."equipments" to "authenticated";

grant delete on table "public"."equipments" to "service_role";

grant insert on table "public"."equipments" to "service_role";

grant references on table "public"."equipments" to "service_role";

grant select on table "public"."equipments" to "service_role";

grant trigger on table "public"."equipments" to "service_role";

grant truncate on table "public"."equipments" to "service_role";

grant update on table "public"."equipments" to "service_role";

grant delete on table "public"."locations" to "anon";

grant insert on table "public"."locations" to "anon";

grant references on table "public"."locations" to "anon";

grant select on table "public"."locations" to "anon";

grant trigger on table "public"."locations" to "anon";

grant truncate on table "public"."locations" to "anon";

grant update on table "public"."locations" to "anon";

grant delete on table "public"."locations" to "authenticated";

grant insert on table "public"."locations" to "authenticated";

grant references on table "public"."locations" to "authenticated";

grant select on table "public"."locations" to "authenticated";

grant trigger on table "public"."locations" to "authenticated";

grant truncate on table "public"."locations" to "authenticated";

grant update on table "public"."locations" to "authenticated";

grant delete on table "public"."locations" to "service_role";

grant insert on table "public"."locations" to "service_role";

grant references on table "public"."locations" to "service_role";

grant select on table "public"."locations" to "service_role";

grant trigger on table "public"."locations" to "service_role";

grant truncate on table "public"."locations" to "service_role";

grant update on table "public"."locations" to "service_role";

create policy "allow articles"
on "public"."articles"
as permissive
for all
to authenticated
using (true);


create policy "allow equipments"
on "public"."equipments"
as permissive
for all
to authenticated
using (true);


create policy "allow locations"
on "public"."locations"
as permissive
for all
to authenticated
using (true);



