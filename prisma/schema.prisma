generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["auth", "public", "storage"]
}

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
// model audit_log_entries {
// @@schema("auth")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
// model flow_state {
// @@schema("auth")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
// model identities {
// @@schema("auth")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
// model instances {
// @@schema("auth")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
// model mfa_amr_claims {
// @@schema("auth")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
// model mfa_challenges {
// @@schema("auth")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
// model mfa_factors {
// @@schema("auth")
// }

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model oauth_clients {
// @@schema("auth")
// }

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
// model one_time_tokens {
// @@schema("auth")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
// model refresh_tokens {
// @@schema("auth")
// }

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
// model saml_providers {
// @@schema("auth")
// }

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
// model saml_relay_states {
// @@schema("auth")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
// model schema_migrations {
// @@schema("auth")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
// model sessions {
// @@schema("auth")
// }

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
// model sso_domains {
// @@schema("auth")
// }

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
// model sso_providers {
// @@schema("auth")
// }

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
// model users {
// @@schema("auth")
// }

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model articles {
  id               BigInt       @id @default(autoincrement())
  created_at       DateTime     @default(now()) @db.Timestamptz(6)
  name             String       @default("") @db.VarChar
  metadata         Json?
  created_by       String?      @default(dbgenerated("auth.uid()")) @db.Uuid
  default_location BigInt?
  company_id       BigInt
  asset_tag        BigInt?
  files            Json?
  asset_tags       asset_tags?  @relation(fields: [asset_tag], references: [id], onDelete: NoAction, onUpdate: NoAction)
  companies        companies    @relation(fields: [company_id], references: [id], onDelete: Cascade)
  profiles         profiles?    @relation(fields: [created_by], references: [id])
  locations        locations?   @relation(fields: [default_location], references: [id])
  equipments       equipments[]

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model asset_tag_templates {
  id         BigInt       @id @default(autoincrement())
  created_at DateTime     @default(now()) @db.Timestamptz(6)
  created_by String?      @default(dbgenerated("auth.uid()")) @db.Uuid
  template   Json?
  company_id BigInt?
  companies  companies?   @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  profiles   profiles?    @relation(fields: [created_by], references: [id])
  asset_tags asset_tags[]

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model asset_tags {
  id                  BigInt               @id @default(autoincrement())
  created_at          DateTime             @default(now()) @db.Timestamptz(6)
  created_by          String?              @default(dbgenerated("auth.uid()")) @db.Uuid
  printed_code        String?              @db.VarChar
  printed_template    BigInt?
  printed_applied     Boolean              @default(false)
  company_id          BigInt?
  nfc_tag_id          BigInt?
  articles            articles[]
  companies           companies?           @relation(fields: [company_id], references: [id], onDelete: Cascade)
  profiles            profiles?            @relation(fields: [created_by], references: [id])
  nfc_tags            nfc_tags?            @relation(fields: [nfc_tag_id], references: [id])
  asset_tag_templates asset_tag_templates? @relation(fields: [printed_template], references: [id])
  cases               cases[]
  equipments          equipments[]
  locations           locations[]

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model contacts {
  id           BigInt    @id @default(autoincrement())
  company_id   BigInt
  created_at   DateTime  @default(now()) @db.Timestamptz(6)
  created_by   String?   @db.Uuid
  contact_type String    @default("general")
  display_name String
  first_name   String?
  last_name    String?
  organization String?
  email        String?
  phone        String?
  has_signal   Boolean   @default(false)
  has_whatsapp Boolean   @default(false)
  has_telegram Boolean   @default(false)
  role         String?
  street       String?
  city         String?
  state        String?
  zip_code     String?
  country      String?
  notes        String?
  website      String?
  metadata     Json?
  companies    companies @relation(fields: [company_id], references: [id], onDelete: Cascade)
  profiles     profiles? @relation(fields: [created_by], references: [id])

  @@schema("public")
  @@index([company_id], map: "contacts_company_id_idx")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model cases {
  id                                               BigInt              @id @default(autoincrement())
  created_at                                       DateTime            @default(now()) @db.Timestamptz(6)
  case_equipment                                   BigInt?
  contains_equipments                              BigInt[]
  company_id                                       BigInt?
  created_by                                       String?             @default(dbgenerated("auth.uid()")) @db.Uuid
  contains_articles                                Json[]
  asset_tag                                        BigInt?
  description                                      String?
  name                                             String?
  files                                            Json?
  asset_tags                                       asset_tags?         @relation(fields: [asset_tag], references: [id], onDelete: NoAction, onUpdate: NoAction)
  equipments_cases_case_equipmentToequipments      equipments?         @relation("cases_case_equipmentToequipments", fields: [case_equipment], references: [id], onDelete: NoAction, onUpdate: NoAction)
  companies                                        companies?          @relation(fields: [company_id], references: [id], onDelete: Cascade)
  profiles                                         profiles?           @relation(fields: [created_by], references: [id])
  job_assets_on_job                                job_assets_on_job[]
  job_booked_assets                                job_booked_assets[]

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model companies {
  id                  BigInt                @id @default(autoincrement())
  created_at          DateTime              @default(now()) @db.Timestamptz(6)
  name                String                @db.VarChar
  description         String?
  metadata            Json?
  owner_user_id       String?               @default(dbgenerated("auth.uid()")) @db.Uuid
  files               Json?
  articles            articles[]
  asset_tag_templates asset_tag_templates[]
  asset_tags          asset_tags[]
  cases               cases[]
  profiles            profiles?             @relation(fields: [owner_user_id], references: [id], onDelete: Restrict)
  customers           customers[]
  equipments          equipments[]
  history             history[]
  job_assets_on_job   job_assets_on_job[]
  job_booked_assets   job_booked_assets[]
  jobs                jobs[]
  locations           locations[]
  nfc_tags            nfc_tags[]
  users_companies     users_companies[]

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model customers {
  id           BigInt    @id @default(autoincrement())
  created_at   DateTime  @default(now()) @db.Timestamptz(6)
  company_id   BigInt
  created_by   String?   @default(dbgenerated("auth.uid()")) @db.Uuid
  type         String?
  forename     String?
  surname      String?
  company_name String?
  address      String?
  postal_code  String?
  country      String?
  email        String?
  metadata     Json?
  files        Json?
  companies    companies @relation(fields: [company_id], references: [id], onDelete: Cascade)
  profiles     profiles? @relation(fields: [created_by], references: [id])
  jobs         jobs[]

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model equipments {
  id                                          BigInt              @id @default(autoincrement())
  created_at                                  DateTime            @default(now()) @db.Timestamptz(6)
  asset_tag                                   BigInt?
  added_to_inventory_at                       DateTime?           @db.Timestamp(6)
  metadata                                    Json?
  article_id                                  BigInt?
  created_by                                  String              @default(dbgenerated("auth.uid()")) @db.Uuid
  company_id                                  BigInt
  current_location                            BigInt?
  files                                       Json?
  cases_cases_case_equipmentToequipments      cases[]             @relation("cases_case_equipmentToequipments")
  articles                                    articles?           @relation(fields: [article_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  asset_tags                                  asset_tags?         @relation(fields: [asset_tag], references: [id], onDelete: NoAction, onUpdate: NoAction)
  companies                                   companies           @relation(fields: [company_id], references: [id], onDelete: Cascade)
  profiles                                    profiles            @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  locations                                   locations?          @relation(fields: [current_location], references: [id])
  job_assets_on_job                           job_assets_on_job[]
  job_booked_assets                           job_booked_assets[]

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model history {
  id             BigInt     @id @default(autoincrement())
  created_at     DateTime   @default(now()) @db.Timestamptz(6)
  company_id     BigInt?
  table_name     String
  data_id        BigInt
  old_data       Json
  change_made_by String?    @db.Uuid
  profiles       profiles?  @relation(fields: [change_made_by], references: [id])
  companies      companies? @relation(fields: [company_id], references: [id], onDelete: Cascade)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model job_assets_on_job {
  id           BigInt      @id @default(autoincrement())
  created_at   DateTime    @default(now()) @db.Timestamptz(6)
  created_by   String?     @default(dbgenerated("auth.uid()")) @db.Uuid
  company_id   BigInt
  job_id       BigInt
  equipment_id BigInt?
  case_id      BigInt?
  cases        cases?      @relation(fields: [case_id], references: [id], onDelete: Cascade)
  companies    companies   @relation(fields: [company_id], references: [id], onDelete: Cascade)
  profiles     profiles?   @relation(fields: [created_by], references: [id])
  equipments   equipments? @relation(fields: [equipment_id], references: [id], onDelete: Cascade)
  jobs         jobs        @relation(fields: [job_id], references: [id], onDelete: Cascade)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model job_booked_assets {
  id           BigInt      @id @default(autoincrement())
  created_at   DateTime    @default(now()) @db.Timestamptz(6)
  created_by   String?     @default(dbgenerated("auth.uid()")) @db.Uuid
  company_id   BigInt
  job_id       BigInt
  equipment_id BigInt?
  case_id      BigInt?
  cases        cases?      @relation(fields: [case_id], references: [id], onDelete: Cascade)
  companies    companies   @relation(fields: [company_id], references: [id], onDelete: Cascade)
  profiles     profiles?   @relation(fields: [created_by], references: [id])
  equipments   equipments? @relation(fields: [equipment_id], references: [id], onDelete: Cascade)
  jobs         jobs        @relation(fields: [job_id], references: [id], onDelete: Cascade)

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model jobs {
  id                BigInt              @id @default(autoincrement())
  created_at        DateTime            @default(now()) @db.Timestamptz(6)
  customer_id       BigInt?
  contact_id        BigInt?
  created_by        String?             @db.Uuid
  startdate         DateTime?           @db.Timestamp(6)
  enddate           DateTime?           @db.Timestamp(6)
  name              String?
  type              String?
  job_location      String?
  meta              Json?
  company_id        BigInt
  files             Json?
  job_assets_on_job job_assets_on_job[]
  job_booked_assets job_booked_assets[]
  companies         companies           @relation(fields: [company_id], references: [id], onDelete: Cascade)
  profiles          profiles?           @relation(fields: [created_by], references: [id])
  customers         customers?          @relation(fields: [customer_id], references: [id])
  contacts          contacts?           @relation(fields: [contact_id], references: [id], onDelete: SetNull)

  @@schema("public")
  @@index([contact_id], map: "jobs_contact_id_idx")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model locations {
  id          BigInt       @id @default(autoincrement())
  created_at  DateTime     @default(now()) @db.Timestamptz(6)
  created_by  String       @default(dbgenerated("auth.uid()")) @db.Uuid
  name        String       @db.VarChar
  description String?
  company_id  BigInt
  asset_tag   BigInt?
  files       Json?
  articles    articles[]
  equipments  equipments[]
  asset_tags  asset_tags?  @relation(fields: [asset_tag], references: [id], onDelete: NoAction, onUpdate: NoAction)
  companies   companies    @relation(fields: [company_id], references: [id], onDelete: Cascade)
  profiles    profiles     @relation(fields: [created_by], references: [id], onDelete: SetNull, onUpdate: NoAction)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model nfc_tags {
  id         BigInt       @id @default(autoincrement())
  created_at DateTime     @default(now()) @db.Timestamptz(6)
  created_by String?      @default(dbgenerated("auth.uid()")) @db.Uuid
  tag_id     String       @db.VarChar
  company_id BigInt
  asset_tags asset_tags[]
  companies  companies    @relation(fields: [company_id], references: [id], onDelete: Cascade)
  profiles   profiles?    @relation(fields: [created_by], references: [id])

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model profiles {
  id                  String                @id @db.Uuid
  first_name          String?
  last_name           String?
  email               String?
  avatar_url          String?
  articles            articles[]
  asset_tag_templates asset_tag_templates[]
  asset_tags          asset_tags[]
  cases               cases[]
  companies           companies[]
  customers           customers[]
  equipments          equipments[]
  history             history[]
  job_assets_on_job   job_assets_on_job[]
  job_booked_assets   job_booked_assets[]
  jobs                jobs[]
  locations           locations[]
  nfc_tags            nfc_tags[]
  users_companies     users_companies[]

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model users_companies {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  user_id    String    @db.Uuid
  company_id BigInt
  companies  companies @relation(fields: [company_id], references: [id], onDelete: Cascade)
  profiles   profiles  @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@schema("public")
}

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
// model buckets {
// @@schema("storage")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
// model buckets_analytics {
// @@schema("storage")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
// model iceberg_namespaces {
// @@schema("storage")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
// model iceberg_tables {
// @@schema("storage")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
// model migrations {
// @@schema("storage")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
// model objects {
// @@schema("storage")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
// model prefixes {
// @@schema("storage")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
// model s3_multipart_uploads {
// @@schema("storage")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
// model s3_multipart_uploads_parts {
// @@schema("storage")
// }

enum aal_level {
  aal1
  aal2
  aal3

  @@schema("auth")
}

enum code_challenge_method {
  s256
  plain

  @@schema("auth")
}

enum factor_status {
  unverified
  verified

  @@schema("auth")
}

enum factor_type {
  totp
  webauthn
  phone

  @@schema("auth")
}

enum oauth_registration_type {
  dynamic
  manual

  @@schema("auth")
}

enum one_time_token_type {
  confirmation_token
  reauthentication_token
  recovery_token
  email_change_token_new
  email_change_token_current
  phone_change_token

  @@schema("auth")
}

enum buckettype {
  STANDARD
  ANALYTICS

  @@schema("storage")
}
