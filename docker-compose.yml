version: '3.8'

services:
  # Next.js App
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      # Required: Supabase connection (replace with your production values)
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      
      # Required: Database connection for Prisma
      - DATABASE_URL=${DATABASE_URL}
      
      # Optional: S3 Storage (if using Supabase Storage S3 protocol)
      - S3_ACCESS_KEY_ID=${S3_ACCESS_KEY_ID:-}
      - S3_SECRET_ACCESS_KEY=${S3_SECRET_ACCESS_KEY:-}
      - S3_REGION=${S3_REGION:-}
      - NEXT_PUBLIC_STORAGE_S3_URL=${NEXT_PUBLIC_STORAGE_S3_URL:-}
      
      # Node environment
      - NODE_ENV=production
    restart: unless-stopped
    depends_on:
      - db
    networks:
      - app-network

  # PostgreSQL Database (optional - use if self-hosting DB)
  # Remove this if using managed Supabase
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
      - POSTGRES_DB=${DB_NAME:-inventory}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - app-network

volumes:
  postgres-data:

networks:
  app-network:
    driver: bridge
