name: Docker Build & Push

on:
  workflow_run:
    workflows: ["Integration Tests"]
    branches: [main]
    types:
      - completed
  # Manual trigger option
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    # Only run if Integration Tests succeeded
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            # Tag with branch name
            type=ref,event=branch
            # Tag with PR number
            type=ref,event=pr
            # Tag with git SHA
            type=sha,prefix={{branch}}-
            # Latest tag for main branch
            type=raw,value=latest,enable={{is_default_branch}}
            # Semantic versioning if tags are pushed
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # Build args for Next.js build-time env vars (if needed)
          # build-args: |
          #   NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}

      - name: Image digest
        run: echo "Image pushed with digest ${{ steps.meta.outputs.digest }}"
